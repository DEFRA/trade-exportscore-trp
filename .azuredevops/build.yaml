parameters:
  - name: forceDevDeploy
    displayName: "Force deployment to DEV"
    type: boolean
    default: false
  - name: deployToSecondary
    displayName: "Select Secondary Region"
    type: string
    default: PRD
    values:
      - None
      - DEV
      - SND
      - PRE
      - PRD

trigger:
  batch: true
  branches:
    include:
      - "*"
  paths:
    exclude:
      - infra/*

stages:
  - stage: Build
    pool:
      name: DEFRA-COMMON-ubuntu2004-SSV3
    jobs:
      - job: Build
        steps:
          - checkout: self
            clean: true
            fetchTags: false

          - task: Npm@1
            displayName: NPM Install
            inputs:
              verbose: false
                    
          - task: Npm@1
            displayName: 'npm audit'
            inputs:
              command: custom
              verbose: false
              customCommand: 'audit -audit-level=high --omit=dev' 
            continueOnError: ${{ ne(variables['Build.Reason'], 'PullRequest') }}

          - task: Npm@1
            displayName: 'npm lint'
            inputs:
              command: custom
              verbose: false
              customCommand: 'run --if-present test:lint'
            continueOnError: ${{ ne(variables['Build.Reason'], 'PullRequest') }}

          - task: Npm@1
            displayName: 'npm build'
            inputs:
              command: custom
              verbose: false
              customCommand: 'run --if-present build'

          - task: Npm@1
            displayName: 'npm unit test'
            inputs:
              command: custom
              verbose: false
              customCommand: 'run --if-present test:unit'

      - job: BuildDockerImage
        dependsOn: Build
        displayName: 'Build Docker Image'
        steps:
          - checkout: self

          - task: Docker@2
            displayName: 'Build an image'
            inputs:
              repository: 'trade-exportscore-trp'
              tag: $(Build.BuildId)
              command: 'build'
              Dockerfile: './Dockerfile'

          - task: Bash@3
            displayName: Save Docker Image
            inputs:
              targetType: 'inline'
              script: |
                docker save trade-exportscore-trp:$(Build.BuildId) -o $(Pipeline.Workspace)/docker.tar

          - task: PublishPipelineArtifact@1
            displayName: 'Publish artifact'
            inputs:
              targetPath: '$(Pipeline.Workspace)/docker.tar'
              artifact: 'dockerImage'
              publishLocation: 'pipeline'

  - stage: DeployDev
    pool:
      name: DEFRA-COMMON-ubuntu2004-SSV3
    jobs:
     - job: Deploy
       steps:
        - task: DownloadPipelineArtifact@2
          displayName: 'Download Docker image' 
          inputs:
            artifactName: 'docker'
            targetPath: '$(Pipeline.Workspace)'